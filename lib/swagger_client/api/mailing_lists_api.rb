=begin
#Moosend API

#TODO: Add a description

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require "uri"

module SwaggerClient
  class MailingListsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Creating a custom field
    # Creates a new custom field in the specified mailing list.
    # @param format 
    # @param apikey You may find your API Key or generate a new one in your account settings.
    # @param mailing_list_id The ID of the mailing list where the custom field will belong.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [CreatingACustomFieldResponse]
    def creating_a_custom_field(format, apikey, mailing_list_id, body, opts = {})
      data, _status_code, _headers = creating_a_custom_field_with_http_info(format, apikey, mailing_list_id, body, opts)
      return data
    end

    # Creating a custom field
    # Creates a new custom field in the specified mailing list.
    # @param format 
    # @param apikey You may find your API Key or generate a new one in your account settings.
    # @param mailing_list_id The ID of the mailing list where the custom field will belong.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(CreatingACustomFieldResponse, Fixnum, Hash)>] CreatingACustomFieldResponse data, response status code and response headers
    def creating_a_custom_field_with_http_info(format, apikey, mailing_list_id, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: MailingListsApi.creating_a_custom_field ..."
      end
      # verify the required parameter 'format' is set
      if @api_client.config.client_side_validation && format.nil?
        fail ArgumentError, "Missing the required parameter 'format' when calling MailingListsApi.creating_a_custom_field"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['json', 'xml'].include?(format)
        fail ArgumentError, "invalid value for 'format', must be one of json, xml"
      end
      # verify the required parameter 'apikey' is set
      if @api_client.config.client_side_validation && apikey.nil?
        fail ArgumentError, "Missing the required parameter 'apikey' when calling MailingListsApi.creating_a_custom_field"
      end
      # verify the required parameter 'mailing_list_id' is set
      if @api_client.config.client_side_validation && mailing_list_id.nil?
        fail ArgumentError, "Missing the required parameter 'mailing_list_id' when calling MailingListsApi.creating_a_custom_field"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling MailingListsApi.creating_a_custom_field"
      end
      # resource path
      local_var_path = "/lists/{MailingListID}/customfields/create.{Format}".sub('{' + 'Format' + '}', format.to_s).sub('{' + 'MailingListID' + '}', mailing_list_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'apikey'] = apikey

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CreatingACustomFieldResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MailingListsApi#creating_a_custom_field\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Creating a mailing list
    # Creates a new empty mailing list in your account.
    # @param format 
    # @param apikey You may find your API Key or generate a new one in your account settings.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [CreatingAMailingListResponse]
    def creating_a_mailing_list(format, apikey, body, opts = {})
      data, _status_code, _headers = creating_a_mailing_list_with_http_info(format, apikey, body, opts)
      return data
    end

    # Creating a mailing list
    # Creates a new empty mailing list in your account.
    # @param format 
    # @param apikey You may find your API Key or generate a new one in your account settings.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(CreatingAMailingListResponse, Fixnum, Hash)>] CreatingAMailingListResponse data, response status code and response headers
    def creating_a_mailing_list_with_http_info(format, apikey, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: MailingListsApi.creating_a_mailing_list ..."
      end
      # verify the required parameter 'format' is set
      if @api_client.config.client_side_validation && format.nil?
        fail ArgumentError, "Missing the required parameter 'format' when calling MailingListsApi.creating_a_mailing_list"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['json', 'xml'].include?(format)
        fail ArgumentError, "invalid value for 'format', must be one of json, xml"
      end
      # verify the required parameter 'apikey' is set
      if @api_client.config.client_side_validation && apikey.nil?
        fail ArgumentError, "Missing the required parameter 'apikey' when calling MailingListsApi.creating_a_mailing_list"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling MailingListsApi.creating_a_mailing_list"
      end
      # resource path
      local_var_path = "/lists/create.{Format}".sub('{' + 'Format' + '}', format.to_s)

      # query parameters
      query_params = {}
      query_params[:'apikey'] = apikey

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CreatingAMailingListResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MailingListsApi#creating_a_mailing_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Deleting a mailing list
    # Deletes a mailing list from your account.
    # @param format 
    # @param apikey You may find your API Key or generate a new one in your account settings.
    # @param mailing_list_id The ID of the mailing list to be deleted.
    # @param [Hash] opts the optional parameters
    # @return [DeletingAMailingListResponse]
    def deleting_a_mailing_list(format, apikey, mailing_list_id, opts = {})
      data, _status_code, _headers = deleting_a_mailing_list_with_http_info(format, apikey, mailing_list_id, opts)
      return data
    end

    # Deleting a mailing list
    # Deletes a mailing list from your account.
    # @param format 
    # @param apikey You may find your API Key or generate a new one in your account settings.
    # @param mailing_list_id The ID of the mailing list to be deleted.
    # @param [Hash] opts the optional parameters
    # @return [Array<(DeletingAMailingListResponse, Fixnum, Hash)>] DeletingAMailingListResponse data, response status code and response headers
    def deleting_a_mailing_list_with_http_info(format, apikey, mailing_list_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: MailingListsApi.deleting_a_mailing_list ..."
      end
      # verify the required parameter 'format' is set
      if @api_client.config.client_side_validation && format.nil?
        fail ArgumentError, "Missing the required parameter 'format' when calling MailingListsApi.deleting_a_mailing_list"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['json', 'xml'].include?(format)
        fail ArgumentError, "invalid value for 'format', must be one of json, xml"
      end
      # verify the required parameter 'apikey' is set
      if @api_client.config.client_side_validation && apikey.nil?
        fail ArgumentError, "Missing the required parameter 'apikey' when calling MailingListsApi.deleting_a_mailing_list"
      end
      # verify the required parameter 'mailing_list_id' is set
      if @api_client.config.client_side_validation && mailing_list_id.nil?
        fail ArgumentError, "Missing the required parameter 'mailing_list_id' when calling MailingListsApi.deleting_a_mailing_list"
      end
      # resource path
      local_var_path = "/lists/{MailingListID}/delete.{Format}".sub('{' + 'Format' + '}', format.to_s).sub('{' + 'MailingListID' + '}', mailing_list_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'apikey'] = apikey

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DeletingAMailingListResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MailingListsApi#deleting_a_mailing_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Getting all active mailing lists
    # Gets a list of your active mailing lists in your account.
    # @param format 
    # @param apikey You may find your API Key or generate a new one in your account settings.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :with_statistics Specifies whether to fetch statistics for the subscribers or not. If omitted, results will be returned with statistics by default.
    # @option opts [String] :short_by The name of the campaign property to sort results by. If not specified, results will be sorted by the CreatedOn property
    # @option opts [String] :sort_method The method to sort results: ASC for ascending, DESC for descending. If not specified, &#x60;ASC&#x60; will be assumed
    # @return [GettingAllActiveMailingListsResponse]
    def getting_all_active_mailing_lists(format, apikey, opts = {})
      data, _status_code, _headers = getting_all_active_mailing_lists_with_http_info(format, apikey, opts)
      return data
    end

    # Getting all active mailing lists
    # Gets a list of your active mailing lists in your account.
    # @param format 
    # @param apikey You may find your API Key or generate a new one in your account settings.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :with_statistics Specifies whether to fetch statistics for the subscribers or not. If omitted, results will be returned with statistics by default.
    # @option opts [String] :short_by The name of the campaign property to sort results by. If not specified, results will be sorted by the CreatedOn property
    # @option opts [String] :sort_method The method to sort results: ASC for ascending, DESC for descending. If not specified, &#x60;ASC&#x60; will be assumed
    # @return [Array<(GettingAllActiveMailingListsResponse, Fixnum, Hash)>] GettingAllActiveMailingListsResponse data, response status code and response headers
    def getting_all_active_mailing_lists_with_http_info(format, apikey, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: MailingListsApi.getting_all_active_mailing_lists ..."
      end
      # verify the required parameter 'format' is set
      if @api_client.config.client_side_validation && format.nil?
        fail ArgumentError, "Missing the required parameter 'format' when calling MailingListsApi.getting_all_active_mailing_lists"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['json', 'xml'].include?(format)
        fail ArgumentError, "invalid value for 'format', must be one of json, xml"
      end
      # verify the required parameter 'apikey' is set
      if @api_client.config.client_side_validation && apikey.nil?
        fail ArgumentError, "Missing the required parameter 'apikey' when calling MailingListsApi.getting_all_active_mailing_lists"
      end
      if @api_client.config.client_side_validation && opts[:'with_statistics'] && !['true', 'false'].include?(opts[:'with_statistics'])
        fail ArgumentError, 'invalid value for "with_statistics", must be one of true, false'
      end
      if @api_client.config.client_side_validation && opts[:'short_by'] && !['Name', 'Subject', 'Status', 'DeliveredOn', 'CreatedOn'].include?(opts[:'short_by'])
        fail ArgumentError, 'invalid value for "short_by", must be one of Name, Subject, Status, DeliveredOn, CreatedOn'
      end
      if @api_client.config.client_side_validation && opts[:'sort_method'] && !['ASC', 'DESC'].include?(opts[:'sort_method'])
        fail ArgumentError, 'invalid value for "sort_method", must be one of ASC, DESC'
      end
      # resource path
      local_var_path = "/lists.{Format}".sub('{' + 'Format' + '}', format.to_s)

      # query parameters
      query_params = {}
      query_params[:'apikey'] = apikey
      query_params[:'WithStatistics'] = opts[:'with_statistics'] if !opts[:'with_statistics'].nil?
      query_params[:'ShortBy'] = opts[:'short_by'] if !opts[:'short_by'].nil?
      query_params[:'SortMethod'] = opts[:'sort_method'] if !opts[:'sort_method'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GettingAllActiveMailingListsResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MailingListsApi#getting_all_active_mailing_lists\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Getting all active mailing lists with paging
    # Gets a list of your active mailing lists in your account. Because the results for this call could be quite big, paging information is required as input.
    # @param format 
    # @param apikey You may find your API Key or generate a new one in your account settings.
    # @param page The page that you want to get.
    # @param page_size Lists Per Page.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :short_by The name of the campaign property to sort results by. If not specified, results will be sorted by the CreatedOn property
    # @option opts [String] :sort_method The method to sort results: ASC for ascending, DESC for descending. If not specified, &#x60;ASC&#x60; will be assumed
    # @return [GettingAllActiveMailingListsWithPagingResponse]
    def getting_all_active_mailing_lists_with_paging(format, apikey, page, page_size, opts = {})
      data, _status_code, _headers = getting_all_active_mailing_lists_with_paging_with_http_info(format, apikey, page, page_size, opts)
      return data
    end

    # Getting all active mailing lists with paging
    # Gets a list of your active mailing lists in your account. Because the results for this call could be quite big, paging information is required as input.
    # @param format 
    # @param apikey You may find your API Key or generate a new one in your account settings.
    # @param page The page that you want to get.
    # @param page_size Lists Per Page.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :short_by The name of the campaign property to sort results by. If not specified, results will be sorted by the CreatedOn property
    # @option opts [String] :sort_method The method to sort results: ASC for ascending, DESC for descending. If not specified, &#x60;ASC&#x60; will be assumed
    # @return [Array<(GettingAllActiveMailingListsWithPagingResponse, Fixnum, Hash)>] GettingAllActiveMailingListsWithPagingResponse data, response status code and response headers
    def getting_all_active_mailing_lists_with_paging_with_http_info(format, apikey, page, page_size, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: MailingListsApi.getting_all_active_mailing_lists_with_paging ..."
      end
      # verify the required parameter 'format' is set
      if @api_client.config.client_side_validation && format.nil?
        fail ArgumentError, "Missing the required parameter 'format' when calling MailingListsApi.getting_all_active_mailing_lists_with_paging"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['json', 'xml'].include?(format)
        fail ArgumentError, "invalid value for 'format', must be one of json, xml"
      end
      # verify the required parameter 'apikey' is set
      if @api_client.config.client_side_validation && apikey.nil?
        fail ArgumentError, "Missing the required parameter 'apikey' when calling MailingListsApi.getting_all_active_mailing_lists_with_paging"
      end
      # verify the required parameter 'page' is set
      if @api_client.config.client_side_validation && page.nil?
        fail ArgumentError, "Missing the required parameter 'page' when calling MailingListsApi.getting_all_active_mailing_lists_with_paging"
      end
      # verify the required parameter 'page_size' is set
      if @api_client.config.client_side_validation && page_size.nil?
        fail ArgumentError, "Missing the required parameter 'page_size' when calling MailingListsApi.getting_all_active_mailing_lists_with_paging"
      end
      if @api_client.config.client_side_validation && opts[:'short_by'] && !['Name', 'Subject', 'Status', 'DeliveredOn', 'CreatedOn'].include?(opts[:'short_by'])
        fail ArgumentError, 'invalid value for "short_by", must be one of Name, Subject, Status, DeliveredOn, CreatedOn'
      end
      if @api_client.config.client_side_validation && opts[:'sort_method'] && !['ASC', 'DESC'].include?(opts[:'sort_method'])
        fail ArgumentError, 'invalid value for "sort_method", must be one of ASC, DESC'
      end
      # resource path
      local_var_path = "/lists/{Page}/{PageSize}.{Format}".sub('{' + 'Format' + '}', format.to_s).sub('{' + 'Page' + '}', page.to_s).sub('{' + 'PageSize' + '}', page_size.to_s)

      # query parameters
      query_params = {}
      query_params[:'apikey'] = apikey
      query_params[:'ShortBy'] = opts[:'short_by'] if !opts[:'short_by'].nil?
      query_params[:'SortMethod'] = opts[:'sort_method'] if !opts[:'sort_method'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GettingAllActiveMailingListsWithPagingResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MailingListsApi#getting_all_active_mailing_lists_with_paging\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Getting mailing list details
    # Gets details for a given mailing list. You may include subscriber statistics in your results or not. Any segments existing for the requested mailing list will not be included in the results.
    # @param format 
    # @param mailing_list_id The ID of the mailing list to be returned.
    # @param apikey You may find your API Key or generate a new one in your account settings.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :with_statistics Specifies whether to fetch statistics for the subscribers or not. If omitted, results will be returned with statistics by default.
    # @return [GettingMailingListDetailsResponse]
    def getting_mailing_list_details(format, mailing_list_id, apikey, opts = {})
      data, _status_code, _headers = getting_mailing_list_details_with_http_info(format, mailing_list_id, apikey, opts)
      return data
    end

    # Getting mailing list details
    # Gets details for a given mailing list. You may include subscriber statistics in your results or not. Any segments existing for the requested mailing list will not be included in the results.
    # @param format 
    # @param mailing_list_id The ID of the mailing list to be returned.
    # @param apikey You may find your API Key or generate a new one in your account settings.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :with_statistics Specifies whether to fetch statistics for the subscribers or not. If omitted, results will be returned with statistics by default.
    # @return [Array<(GettingMailingListDetailsResponse, Fixnum, Hash)>] GettingMailingListDetailsResponse data, response status code and response headers
    def getting_mailing_list_details_with_http_info(format, mailing_list_id, apikey, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: MailingListsApi.getting_mailing_list_details ..."
      end
      # verify the required parameter 'format' is set
      if @api_client.config.client_side_validation && format.nil?
        fail ArgumentError, "Missing the required parameter 'format' when calling MailingListsApi.getting_mailing_list_details"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['json', 'xml'].include?(format)
        fail ArgumentError, "invalid value for 'format', must be one of json, xml"
      end
      # verify the required parameter 'mailing_list_id' is set
      if @api_client.config.client_side_validation && mailing_list_id.nil?
        fail ArgumentError, "Missing the required parameter 'mailing_list_id' when calling MailingListsApi.getting_mailing_list_details"
      end
      # verify the required parameter 'apikey' is set
      if @api_client.config.client_side_validation && apikey.nil?
        fail ArgumentError, "Missing the required parameter 'apikey' when calling MailingListsApi.getting_mailing_list_details"
      end
      if @api_client.config.client_side_validation && opts[:'with_statistics'] && !['true', 'false'].include?(opts[:'with_statistics'])
        fail ArgumentError, 'invalid value for "with_statistics", must be one of true, false'
      end
      # resource path
      local_var_path = "/lists/{MailingListID}/details.{Format}".sub('{' + 'Format' + '}', format.to_s).sub('{' + 'MailingListID' + '}', mailing_list_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'apikey'] = apikey
      query_params[:'WithStatistics'] = opts[:'with_statistics'] if !opts[:'with_statistics'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GettingMailingListDetailsResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MailingListsApi#getting_mailing_list_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Removing a custom field
    # Removes a custom field definition from the specified mailing list.
    # @param format 
    # @param custom_field_id The ID of the custom field to be deleted.
    # @param apikey You may find your API Key or generate a new one in your account settings.
    # @param mailing_list_id The ID of the mailing list where the custom field belongs.
    # @param [Hash] opts the optional parameters
    # @return [RemovingACustomFieldResponse]
    def removing_a_custom_field(format, custom_field_id, apikey, mailing_list_id, opts = {})
      data, _status_code, _headers = removing_a_custom_field_with_http_info(format, custom_field_id, apikey, mailing_list_id, opts)
      return data
    end

    # Removing a custom field
    # Removes a custom field definition from the specified mailing list.
    # @param format 
    # @param custom_field_id The ID of the custom field to be deleted.
    # @param apikey You may find your API Key or generate a new one in your account settings.
    # @param mailing_list_id The ID of the mailing list where the custom field belongs.
    # @param [Hash] opts the optional parameters
    # @return [Array<(RemovingACustomFieldResponse, Fixnum, Hash)>] RemovingACustomFieldResponse data, response status code and response headers
    def removing_a_custom_field_with_http_info(format, custom_field_id, apikey, mailing_list_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: MailingListsApi.removing_a_custom_field ..."
      end
      # verify the required parameter 'format' is set
      if @api_client.config.client_side_validation && format.nil?
        fail ArgumentError, "Missing the required parameter 'format' when calling MailingListsApi.removing_a_custom_field"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['json', 'xml'].include?(format)
        fail ArgumentError, "invalid value for 'format', must be one of json, xml"
      end
      # verify the required parameter 'custom_field_id' is set
      if @api_client.config.client_side_validation && custom_field_id.nil?
        fail ArgumentError, "Missing the required parameter 'custom_field_id' when calling MailingListsApi.removing_a_custom_field"
      end
      # verify the required parameter 'apikey' is set
      if @api_client.config.client_side_validation && apikey.nil?
        fail ArgumentError, "Missing the required parameter 'apikey' when calling MailingListsApi.removing_a_custom_field"
      end
      # verify the required parameter 'mailing_list_id' is set
      if @api_client.config.client_side_validation && mailing_list_id.nil?
        fail ArgumentError, "Missing the required parameter 'mailing_list_id' when calling MailingListsApi.removing_a_custom_field"
      end
      # resource path
      local_var_path = "/lists/{MailingListID}/customfields/{CustomFieldID}/delete.{Format}".sub('{' + 'Format' + '}', format.to_s).sub('{' + 'CustomFieldID' + '}', custom_field_id.to_s).sub('{' + 'MailingListID' + '}', mailing_list_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'apikey'] = apikey

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'RemovingACustomFieldResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MailingListsApi#removing_a_custom_field\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Updating a custom field
    # Updates the properties of an existing custom field in the specified mailing list.
    # @param format 
    # @param custom_field_id The ID of the custom field to be updated.
    # @param apikey You may find your API Key or generate a new one in your account settings.
    # @param mailing_list_id The ID of the mailing list where the custom field belongs.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [UpdatingACustomFieldResponse]
    def updating_a_custom_field(format, custom_field_id, apikey, mailing_list_id, body, opts = {})
      data, _status_code, _headers = updating_a_custom_field_with_http_info(format, custom_field_id, apikey, mailing_list_id, body, opts)
      return data
    end

    # Updating a custom field
    # Updates the properties of an existing custom field in the specified mailing list.
    # @param format 
    # @param custom_field_id The ID of the custom field to be updated.
    # @param apikey You may find your API Key or generate a new one in your account settings.
    # @param mailing_list_id The ID of the mailing list where the custom field belongs.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(UpdatingACustomFieldResponse, Fixnum, Hash)>] UpdatingACustomFieldResponse data, response status code and response headers
    def updating_a_custom_field_with_http_info(format, custom_field_id, apikey, mailing_list_id, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: MailingListsApi.updating_a_custom_field ..."
      end
      # verify the required parameter 'format' is set
      if @api_client.config.client_side_validation && format.nil?
        fail ArgumentError, "Missing the required parameter 'format' when calling MailingListsApi.updating_a_custom_field"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['json', 'xml'].include?(format)
        fail ArgumentError, "invalid value for 'format', must be one of json, xml"
      end
      # verify the required parameter 'custom_field_id' is set
      if @api_client.config.client_side_validation && custom_field_id.nil?
        fail ArgumentError, "Missing the required parameter 'custom_field_id' when calling MailingListsApi.updating_a_custom_field"
      end
      # verify the required parameter 'apikey' is set
      if @api_client.config.client_side_validation && apikey.nil?
        fail ArgumentError, "Missing the required parameter 'apikey' when calling MailingListsApi.updating_a_custom_field"
      end
      # verify the required parameter 'mailing_list_id' is set
      if @api_client.config.client_side_validation && mailing_list_id.nil?
        fail ArgumentError, "Missing the required parameter 'mailing_list_id' when calling MailingListsApi.updating_a_custom_field"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling MailingListsApi.updating_a_custom_field"
      end
      # resource path
      local_var_path = "/lists/{MailingListID}/customfields/{CustomFieldID}/update.{Format}".sub('{' + 'Format' + '}', format.to_s).sub('{' + 'CustomFieldID' + '}', custom_field_id.to_s).sub('{' + 'MailingListID' + '}', mailing_list_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'apikey'] = apikey

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'UpdatingACustomFieldResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MailingListsApi#updating_a_custom_field\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Updating a mailing list
    # Updates the properties of an existing mailing list.
    # @param format 
    # @param apikey You may find your API Key or generate a new one in your account settings.
    # @param mailing_list_id The ID of the mailing list to be updated.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [UpdatingAMailingListResponse]
    def updating_a_mailing_list(format, apikey, mailing_list_id, body, opts = {})
      data, _status_code, _headers = updating_a_mailing_list_with_http_info(format, apikey, mailing_list_id, body, opts)
      return data
    end

    # Updating a mailing list
    # Updates the properties of an existing mailing list.
    # @param format 
    # @param apikey You may find your API Key or generate a new one in your account settings.
    # @param mailing_list_id The ID of the mailing list to be updated.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(UpdatingAMailingListResponse, Fixnum, Hash)>] UpdatingAMailingListResponse data, response status code and response headers
    def updating_a_mailing_list_with_http_info(format, apikey, mailing_list_id, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: MailingListsApi.updating_a_mailing_list ..."
      end
      # verify the required parameter 'format' is set
      if @api_client.config.client_side_validation && format.nil?
        fail ArgumentError, "Missing the required parameter 'format' when calling MailingListsApi.updating_a_mailing_list"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['json', 'xml'].include?(format)
        fail ArgumentError, "invalid value for 'format', must be one of json, xml"
      end
      # verify the required parameter 'apikey' is set
      if @api_client.config.client_side_validation && apikey.nil?
        fail ArgumentError, "Missing the required parameter 'apikey' when calling MailingListsApi.updating_a_mailing_list"
      end
      # verify the required parameter 'mailing_list_id' is set
      if @api_client.config.client_side_validation && mailing_list_id.nil?
        fail ArgumentError, "Missing the required parameter 'mailing_list_id' when calling MailingListsApi.updating_a_mailing_list"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling MailingListsApi.updating_a_mailing_list"
      end
      # resource path
      local_var_path = "/lists/{MailingListID}/update.{Format}".sub('{' + 'Format' + '}', format.to_s).sub('{' + 'MailingListID' + '}', mailing_list_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'apikey'] = apikey

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'UpdatingAMailingListResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MailingListsApi#updating_a_mailing_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
