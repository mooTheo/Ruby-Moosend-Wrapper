=begin
#Moosend API

#TODO: Add a description

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::SubscribersApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SubscribersApi' do
  before do
    # run before each test
    @instance = SwaggerClient::SubscribersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SubscribersApi' do
    it 'should create an instance of SubscribersApi' do
      expect(@instance).to be_instance_of(SwaggerClient::SubscribersApi)
    end
  end

  # unit tests for adding_multiple_subscribers
  # Adding multiple subscribers
  # This method allows you to add multiple subscribers in a mailing list with a single call. If some subscribers already exist with the given email addresses, they will be updated. If you try to add a subscriber with an invalid email address, this attempt will be ignored, as the process will skip to the next subscriber automatically.
  # @param format 
  # @param apikey You may find your API Key or generate a new one in your account settings.
  # @param mailing_list_id The ID of the mailing list to add subscribers to.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [AddingMultipleSubscribersResponse]
  describe 'adding_multiple_subscribers test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for adding_subscribers
  # Adding subscribers
  # Adds a new subscriber to the specified mailing list. If there is already a subscriber with the specified email address in the list, an update will be performed instead.
  # @param format 
  # @param mailing_list_id The ID of the mailing list to add the new member.
  # @param apikey You may find your API Key or generate a new one in your account settings.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [AddingSubscribersResponse]
  describe 'adding_subscribers test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_subscriber_by_email_address
  # Get subscriber by email address
  # Searches for a subscriber with the specified email address in the specified mailing list and returns detailed information such as id, name, date created, date unsubscribed, status and custom fields
  # @param format 
  # @param apikey You may find your API Key or generate a new one in your account settings.
  # @param mailing_list_id The ID of the mailing list where the subscriber belongs.
  # @param email The email of the subscriber.
  # @param [Hash] opts the optional parameters
  # @return [GetSubscriberByEmailAddressResponse]
  describe 'get_subscriber_by_email_address test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_subscriber_by_id
  # Get subscriber by id
  # Searches for a subscriber with the specified unique id in the specified mailing list and returns detailed information such as email, name, date created, date unsubscribed, status and custom fields.
  # @param format 
  # @param apikey You may find your API Key or generate a new one in your account settings.
  # @param mailing_list_id The ID of the mailing list to search the subscriber in.
  # @param subscriber_id The id of the subscriber being searched.
  # @param [Hash] opts the optional parameters
  # @return [GetSubscriberByIdResponse]
  describe 'get_subscriber_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for getting_subscribers
  # Getting subscribers
  # Gets a list of all subscribers in a given mailing list. You may filter the list by setting a date to fetch those subscribed since then and/or by their status. Because the results for this call could be quite big, paging information is required as input.
  # @param format 
  # @param mailing_list_id The ID of the mailing list where the subscribers belong.
  # @param apikey You may find your API Key or generate a new one in your account settings.
  # @param status Specifies what type of subscriber statistics results will be returned.
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :page Specifies the page of subscriber statistics results will be returned.
  # @option opts [Float] :page_size Specifies the page size of subscriber statistics results will be returned.
  # @return [GettingSubscribersResponse]
  describe 'getting_subscribers test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for removing_a_subscriber
  # Removing a subscriber
  # Removes a subscriber from the specified mailing list permanently (without moving to the suppression list).
  # @param format 
  # @param apikey You may find your API Key or generate a new one in your account settings.
  # @param mailing_list_id The ID of the mailing list to remove the subscriber from.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [RemovingASubscriberResponse]
  describe 'removing_a_subscriber test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for removing_multiple_subscribers
  # Removing multiple subscribers
  # Removes a list of subscribers from the specified mailing list permanently (without putting them in the suppression list). Any invalid email addresses specified will be ignored.
  # @param format 
  # @param apikey You may find your API Key or generate a new one in your account settings.
  # @param mailing_list_id The ID of the mailing list to remove the subscribers from.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [RemovingMultipleSubscribersResponse]
  describe 'removing_multiple_subscribers test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for unsubscribing_subscribers_from_account
  # Unsubscribing subscribers from account
  # Unsubscribes a subscriber from the account.
  # @param format 
  # @param apikey You may find your API Key or generate a new one in your account settings.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [UnsubscribingSubscribersFromAccountResponse]
  describe 'unsubscribing_subscribers_from_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for unsubscribing_subscribers_from_mailing_list
  # Unsubscribing subscribers from mailing list
  # Unsubscribes a subscriber from the specified mailing list. The subscriber is not deleted, but moved to the suppression list.
  # @param format 
  # @param apikey You may find your API Key or generate a new one in your account settings.
  # @param mailing_list_id The ID of the mailing list to add subscribers to.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [UnsubscribingSubscribersFromMailingListResponse]
  describe 'unsubscribing_subscribers_from_mailing_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for unsubscribing_subscribers_from_mailing_list_and_a_specified_campaign
  # Unsubscribing subscribers from mailing list and a specified campaign
  # Unsubscribes a subscriber from the specified mailing list and the specified campaign. The subscriber is not deleted, but moved to the suppression list.  This call will take into account the setting you have in \&quot;suppression list and unsubscribe settings\&quot; and will remove the subscriber from all other mailing lists or not accordingly.
  # @param format 
  # @param campaign_id The ID of the campaign that was sent to the specific mailing list.
  # @param apikey You may find your API Key or generate a new one in your account settings.
  # @param mailing_list_id The ID of the mailing list to remove the subscriber from.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [UnsubscribingSubscribersFromMailingListAndASpecifiedCampaignResponse]
  describe 'unsubscribing_subscribers_from_mailing_list_and_a_specified_campaign test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for updating_a_subscriber
  # Updating a subscriber
  # Updates a subscriber in the specified mailing list. You can even update the subscribers email, if he has not unsubscribed.
  # @param format 
  # @param apikey You may find your API Key or generate a new one in your account settings.
  # @param mailing_list_id The ID of the mailing list that contains the subscriber
  # @param subscriber_id The id of the subscriber to be updated
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [UpdatingASubscriberResponse]
  describe 'updating_a_subscriber test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
